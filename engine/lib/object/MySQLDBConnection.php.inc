<?php
/*
 * CaMykS Engine
 * Developed by     : camyks.net
 * Author           : CaMykS Team <camyks.contact@gmail.com>
 * CaMykS Version   : 1.0
 * Object Version   : 1.0
 * Creation Date    : Sep 2014
 * Last Modif Date  : Oct 2017
 *
 * MySQL Database connection object
 */

final class MySQLDBConnection extends CDBConnection {

  /*
   * Class constructor
   * @return void
   * @access public
   */
  public function __construct() {
    parent::__construct();
  }

  /* server related methods */
  
  /*
   * connect to server
   * @param string $host
   * @param string $login
   * @param string $pwd
   * @return boolean success
   * @access public
   */
  public function connect_server($host='localhost', $login='', $pwd='', $driver='') {
    /* database server connection */
    $this->connection = @mysql_pconnect($host, $login, $pwd);
  
    /* check if connection is made successfully */
    if ($this->connection)
      $this->active = true;
    return $this->active;
  }
  
  /*
   * close server connection
   * @return boolean success
   * @access public
   */
  public function disconnect_server() {
    if ($this->is_connectionActive())
      return mysql_close();
    return true;
  }
  
  /*
   * return version
   * @return string
   * @access public
   */
  public function get_version() {
    if ($this->is_connectionActive())
      return mysql_get_server_info();
    return '';
  }
  
  /* database related methods */
  
  /*
   * select table
   * @param string $name the database name
   * @return boolean
   * @access public
   */
  public function select_database ( $name ) {
    if (!$this->is_connectionActive())
      return false;
    $this->dbName = $name;
    return mysql_select_db($name , $this->connection);
  }
  
  /* 
   * create a database
   * @param string $name
   * @param string $charset
   * @return boolean
   * @access public
   */
  public function create_database ( $name, $charset='utf8' ) {
    return $this->execute_query('CREATE DATABASE '.$name.' DEFAULT CHARACTER SET '.$charset);
  }

  /*
   * check if a base exits
   * @param string $name
   * @return boolean
   * @access public
   */
  public function database_exists ( $name ) {
    return mysql_select_db( $name );
  }
  
  /* query related methods */
    
  /*
   * execute query
   * @param string $sql
   * @param string $resName
   * @return boolean success
   * @access public
   */
  public function execute_query($sql='', $resName='defaultRes') {
    $this->queryRes[$resName] = mysql_query($sql);
    return ($this->queryRes[$resName] !== false);
  }

  /*
   * return id generated by last query
   * @param string $resName
   * @return integer
   * @access public
   */
  public function get_queryGeneratedId($resName='defaultRes') {
    return mysql_insert_id();
  }

  /*
   * return next query data line
   * @param string $resName
   * @return array
   * @access public
   */
  public function get_queryDataLine($resName='defaultRes') {
    if (isset($this->queryRes[$resName])) 
      return mysql_fetch_assoc($this->queryRes[$resName]);
    return false;
  }
  
  /*
   * return next query data line with numeric indexes
   * @param string $resName
   * @return array
   * @access public
   */
  public function get_queryNumDataLine($resName='defaultRes') {
    if (isset($this->queryRes[$resName]))
      return mysql_fetch_row($this->queryRes[$resName]);
    return false;
  }

  /*
   * return latest query error
   * @param string $resName
   * @return string
   * @access public
   */
  public function get_queryError($resName='defaultRes') {
    if (isset($this->queryRes[$resName]) and !is_bool($this->queryRes[$resName])) {
      return @mysql_error($this->queryRes[$resName]);
    }
    return mysql_error();
  }

  /*
   * return latest query affected rows
   * @param string $resName
   * @return integer
   * @access public
   */
  public function get_queryAffectedRows($resName='defaultRes') {
    if (isset($this->queryRes[$resName]) and !is_bool($this->queryRes[$resName]))
      return mysql_affected_rows($this->queryRes[$resName]);
    return mysql_affected_rows();
  }
  
  /*
   * return latest query field count
   * @param string $resName
   * @return integer 
   * @access public
   */
  public function get_queryFieldCount($resName='defaultRes') {
    if (isset($this->queryRes[$resName]))
      return mysql_num_fields($this->queryRes[$resName]);
    return false;
  }
  
  /*
   * return latest query field type
   * @param integer $fIndex
   * @param string $resName
   * @return string
   * @access public
   */
  public function get_queryFieldType($fIndex=0, $resName='defaultRes') {
    if (isset($this->queryRes[$resName]))
      return mysql_field_type($this->queryRes[$resName], $fIndex);
    return false;
  }
  
  /*
   * close ressource
   * @param string $resName
   * @return boolean result
   * @access public
   */
  public function close_ressource($resName='defaultRes') {
    if (isset($this->queryRes[$resName]))
      return mysql_free_result($this->queryRes[$resName]);
    return true;
  }
  
  /* data related methods */
  
  /*
   * return escaped string
   * @param string $string
   * @return string
   * @access public
   */
  public function escape_string($string) {
    return mysql_real_escape_string($string);
  }
}